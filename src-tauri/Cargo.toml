[package]
name = "app"
description = "Relais"
default-run = "app"

authors.workspace = true
edition.workspace = true
license.workspace = true
repository.workspace = true
rust-version.workspace = true
version.workspace = true

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[build-dependencies]
tauri-build = { version = "^2.0.0-rc.12", features = [] }

[dependencies]
configu.workspace = true

anyhow = { workspace = true }
# serde_json = { workspace = true }
serde = { workspace = true, features = ["derive"] }
serial_test = { workspace = true }
specta = "2.0.0-rc"
specta-typescript = "^0.0.7"
tauri = { version = "^2.0.0", features = [
  "image-ico",
  "image-png",
  "image",
  "specta",
  "tray-icon",
] }
tauri-plugin-dialog = "^2.0.0"
tauri-plugin-global-shortcut = "^2.0.0"
tauri-specta = { version = "^2.0.0-rc", features = ["derive", "typescript"] }
# tokio = { workspace = true, features = ["full"] }
toml = { workspace = true }
url = "2.5.2"
uuid = { version = "1.10.0", features = ["v4"] }
webview2-com = "0.33.0"
windows = { version = "0.58.0", features = [
  "Win32_Foundation",
  "Win32_Graphics_Dwm",
  "Win32_Graphics",
  "Win32_UI_Shell",
  "Win32_UI_WindowsAndMessaging",
] }

[features]
# this feature is used for production builds or when `devPath` points to the filesystem and the built-in dev server is disabled.
# If you use cargo directly instead of tauri's cli you can use this feature flag to switch between tauri's `dev` and `build` modes.
# DO NOT REMOVE!!
custom-protocol = ["tauri/custom-protocol"]

[lib]
name = "app_lib"
crate-type = ["staticlib", "cdylib", "rlib"]
